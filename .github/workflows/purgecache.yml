name: Cloudflare Cache Purge

on:
  push:
    branches:
      - myblog # 这里的分支名称可以根据自己的情况进行修改
  workflow_dispatch:

jobs:
  purge_cache:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Purge Cloudflare Cache
        env:
          CF_API_KEY: ${{ secrets.CF_API_KEY }}
          CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
        run: |
          curl -sSX POST "https://api.cloudflare.com/client/v4/zones/${CF_ZONE_ID}/purge_cache" 
            -H "Authorization: Bearer ${CF_API_KEY}" 
            -H "Content-Type: application/json" 
            --data '{"purge_everything":true}'

  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Delete old workflow runs
        uses: actions/github-script@v4
        with:
          script: |
            const workflowName = 'Cloudflare Cache Purge'; // workflow 的名称
            const maxRuns = 5; // 最多保留的 workflow run 数量
            const { data: runs } = await github.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: await github.actions.getWorkflowId({ owner: context.repo.owner, repo: context.repo.repo, workflow_file_path: '.github/workflows/purge.yml' }), // 需要获取 workflow_id，可以使用 getWorkflowId 函数
              per_page: 100
            });
            const sortedRuns = runs.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));
            const toDelete = sortedRuns.slice(maxRuns);
            for (const run of toDelete) {
              console.log(Deleting run ${run.id});
              await github.actions.deleteWorkflowRun({
                owner: context.repo.owner,
                repo: context.repo.repo,
                run_id: run.id
              });
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
